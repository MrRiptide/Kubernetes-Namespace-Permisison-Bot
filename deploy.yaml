apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: namespace-permission-bot-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: permissionbots.permission-bot.mrriptide.github.io
spec:
  group: permission-bot.mrriptide.github.io
  names:
    kind: PermissionBot
    listKind: PermissionBotList
    plural: permissionbots
    singular: permissionbot
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PermissionBot is the Schema for the permissionbots API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PermissionBotSpec defines the desired state of PermissionBot
            properties:
              foo:
                description: Foo is an example field of PermissionBot. Edit PermissionBot_types.go to remove/update
                type: string
            type: object
          status:
            description: PermissionBotStatus defines the observed state of PermissionBot
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: namespace-permission-bot-leader-election-role
  namespace: namespace-permission-bot-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: namespace-permission-bot-manager-role
rules:
- apiGroups:
  - permission-bot.mrriptide.github.io
  resources:
  - permissionbots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - permission-bot.mrriptide.github.io
  resources:
  - permissionbots/finalizers
  verbs:
  - update
- apiGroups:
  - permission-bot.mrriptide.github.io
  resources:
  - permissionbots/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-permission-bot-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-permission-bot-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-permission-bot-namespace-role
rules:
- apiGroups:
  - ""
  - rbac.authorization.k8s.io
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: namespace-permission-bot-leader-election-rolebinding
  namespace: namespace-permission-bot-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: namespace-permission-bot-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-permission-bot-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-permission-bot-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-namespace-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-permission-bot-namespace-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-admin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-edit-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-permission-bot-view-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: namespace-permission-bot-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 0b480a74.mrriptide.github.io
kind: ConfigMap
metadata:
  name: namespace-permission-bot-manager-config
  namespace: namespace-permission-bot-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: namespace-permission-bot-controller-manager-metrics-service
  namespace: namespace-permission-bot-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: namespace-permission-bot-controller-manager
  namespace: namespace-permission-bot-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/mrriptide/permission-bot:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /config.json
          name: permission-bot-config
          subPath: config.json
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: permission-bot-config
        name: permission-bot-config
---
apiVersion: v1
data:
  config.json: "{\r\n  \"mode\": \"authoritative\",\r\n  \"groups\": [\r\n    {\r\n
    \     \"prefix\": \"example\",\r\n      \"label\": \"example\",\r\n      \"roles\":
    {\r\n        \"edit\": [\r\n          {\"type\": \"User\", \"name\": \"editor@example.com\"}\r\n
    \       ],\r\n        \"admin\": [\r\n          {\"type\": \"User\", \"name\":
    \"admin@example.com\"}\r\n        ],\r\n        \"view\": [\r\n          {\"type\":
    \"User\", \"name\": \"viewer@example.com\"}\r\n        ]\r\n      }\r\n    },\r\n
    \   {\r\n      \"prefix\": \"example2\",\r\n      \"label\": \"example2\",\r\n
    \     \"roles\": {\r\n        \"edit\": [\r\n          {\"type\": \"User\", \"name\":
    \"editor@example2.com\"}\r\n        ],\r\n        \"admin\": [\r\n          {\"type\":
    \"User\", \"name\": \"admin@example2.com\"}\r\n        ],\r\n        \"view\":
    [\r\n          {\"type\": \"User\", \"name\": \"viewer@example2.com\"}\r\n        ]\r\n
    \     }\r\n    }\r\n  ]\r\n}\r\n"
kind: ConfigMap
metadata:
  name: permission-bot-config
  namespace: namespace-permission-bot-system
